{"version":3,"sources":["webpack:///dist/js/app.bundle.js","webpack:///./src/bootstrap.ts","webpack:///./src/MyCanvas.ts","webpack:///./src/Container.ts","webpack:///./src/PositionUtils.ts","webpack:///./src/Position.ts","webpack:///./src/TextElement.ts","webpack:///./src/UIUtils.ts","webpack:///./src/Dialog.ts"],"names":["webpackJsonp","module","exports","__webpack_require__","MyCanvas_1","TextElement_1","Position_1","UIUtils_1","surface","document","getElementById","canvas","Draw","addEventListener","e","header","Position","TOP_LEFT","AddText","teaser","MIDDLE_CENTER","ShowDialog","Container_1","PositionUtils_1","MyCanvas","this","defaultWidth","defaultHeight","context","getContext","createElement","clientWidth","clientHeight","appendChild","container","prototype","imagePath","_this","imageElement","Image","onload","ResizeCanvas","width","height","drawImage","src","text","WrapText","Width","Height","words","value","split","line","x","getX","position","y","getY","maxWidth","lineHeight","font","fillStyle","color","n","length","testLine","metrics","measureText","testWidth","fillText","ToString","Object","defineProperty","Container","get","set","window","innerWidth","enumerable","configurable","innerHeight","PositionUtils","pos","MIDDLE_LEFT","BOTTOM_LEFT","TOP_CENTER","BOTTOM_CENTER","TOP_RIGHT","MIDDLE_RIGHT","BOTTOM_RIGHT","TextElement","Dialog_1","UIUtils","heading","dialog","element","innerHTML","GetHTML","positiveButton","getElementsByClassName","item","children","remove","negetiveButton","Dialog"],"mappings":"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","file":"./dist/js/app.bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar MyCanvas_1 = __webpack_require__(1);\r\n\tvar TextElement_1 = __webpack_require__(5);\r\n\tvar Position_1 = __webpack_require__(4);\r\n\tvar UIUtils_1 = __webpack_require__(6);\r\n\t// Initialize canvas.\r\n\tvar surface = document.getElementById('drawing_area');\r\n\tvar canvas = new MyCanvas_1.default(surface);\r\n\tcanvas.Draw('images/header_1.jpg');\r\n\t/// Register add header\r\n\tdocument.getElementById('add-header').addEventListener('click', function (e) {\r\n\t    var header = new TextElement_1.default('Header', '30pt Arial', '#eee', Position_1.Position.TOP_LEFT);\r\n\t    canvas.AddText(header);\r\n\t});\r\n\t// Register add Teaser\r\n\tdocument.getElementById('add-teaser').addEventListener('click', function (e) {\r\n\t    var teaser = new TextElement_1.default('This will be the valuable massage to the audience.', '30pt Calibri', 'white', Position_1.Position.MIDDLE_CENTER);\r\n\t    canvas.AddText(teaser);\r\n\t});\r\n\t// Register add Button\r\n\tdocument.getElementById('add-button').addEventListener('click', function (e) {\r\n\t    //let button = new ButtonElement('Visit', '10pt Georgia', '#eee', Position.BOTTOM_RIGHT);\r\n\t    //canvas.AddText(button);\r\n\t    UIUtils_1.default.ShowDialog('Button');\r\n\t});\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Container_1 = __webpack_require__(2);\r\n\tvar PositionUtils_1 = __webpack_require__(3);\r\n\tvar MyCanvas = (function () {\r\n\t    /**\r\n\t     * Creates an instance of MyCanvas.\r\n\t     *\r\n\t     * @param {HTMLCanvasElement} surface\r\n\t     *\r\n\t     * @memberOf MyCanvas\r\n\t     */\r\n\t    function MyCanvas(surface) {\r\n\t        this.defaultWidth = 100;\r\n\t        this.defaultHeight = 200;\r\n\t        if (surface) {\r\n\t            this.context = surface.getContext('2d');\r\n\t        }\r\n\t        else {\r\n\t            surface = document.createElement('Canvas');\r\n\t            surface.clientWidth = this.defaultWidth;\r\n\t            surface.clientHeight = this.defaultHeight;\r\n\t            document.appendChild(surface);\r\n\t            this.context = surface.getContext('2d');\r\n\t        }\r\n\t        this.surface = surface;\r\n\t        this.container = new Container_1.default();\r\n\t    }\r\n\t    /**\r\n\t     * Draw the base image.\r\n\t     *\r\n\t     * @param {string} imagePath\r\n\t     *\r\n\t     * @memberOf MyCanvas\r\n\t     */\r\n\t    MyCanvas.prototype.Draw = function (imagePath) {\r\n\t        var _this = this;\r\n\t        var imageElement = new Image();\r\n\t        imageElement.onload = function () {\r\n\t            _this.ResizeCanvas(imageElement.width, imageElement.height);\r\n\t            _this.context.drawImage(imageElement, 0, 0);\r\n\t        };\r\n\t        imageElement.src = imagePath;\r\n\t    };\r\n\t    /**\r\n\t     * Add Text elements to canvas.\r\n\t     *\r\n\t     * @param {TextElement} text\r\n\t     *\r\n\t     * @memberOf MyCanvas\r\n\t     */\r\n\t    MyCanvas.prototype.AddText = function (text) {\r\n\t        this.WrapText(text);\r\n\t    };\r\n\t    /**\r\n\t     * Resize the canvas.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {number} width\r\n\t     * @param {number} height\r\n\t     *\r\n\t     * @memberOf MyCanvas\r\n\t     */\r\n\t    MyCanvas.prototype.ResizeCanvas = function (width, height) {\r\n\t        this.container.Width = width;\r\n\t        this.container.Height = height;\r\n\t        this.surface.width = this.container.Width;\r\n\t        this.surface.height = this.container.Height;\r\n\t    };\r\n\t    /**\r\n\t     * Wrap the text to canvas width.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {TextElement} text\r\n\t     *\r\n\t     * @memberOf MyCanvas\r\n\t     */\r\n\t    MyCanvas.prototype.WrapText = function (text) {\r\n\t        var words = text.value.split(' ');\r\n\t        var line = '';\r\n\t        var x = PositionUtils_1.default.getX(text.position, this.container);\r\n\t        var y = PositionUtils_1.default.getY(text.position, this.container);\r\n\t        var maxWidth = this.container.Width - 20 - x;\r\n\t        var lineHeight = 25;\r\n\t        x = (this.container.Width - maxWidth) / 2;\r\n\t        this.context.font = text.font;\r\n\t        this.context.fillStyle = text.color;\r\n\t        //this.context.textBaseline = 'Top';\r\n\t        for (var n = 0; n < words.length; n++) {\r\n\t            var testLine = line + words[n] + ' ';\r\n\t            var metrics = this.context.measureText(testLine);\r\n\t            var testWidth = metrics.width;\r\n\t            if (testWidth > maxWidth && n > 0) {\r\n\t                this.context.fillText(line, x, y);\r\n\t                line = words[n] + ' ';\r\n\t                y += lineHeight;\r\n\t            }\r\n\t            else {\r\n\t                line = testLine;\r\n\t            }\r\n\t        }\r\n\t        this.context.fillText(line, x, y);\r\n\t    };\r\n\t    /**\r\n\t     * Canvas toString.\r\n\t     *\r\n\t     * @returns {string}\r\n\t     *\r\n\t     * @memberOf MyCanvas\r\n\t     */\r\n\t    MyCanvas.prototype.ToString = function () {\r\n\t        return \"The canvas width :\" + this.container.Width + \", The canvas height :\" + this.container.Height;\r\n\t    };\r\n\t    return MyCanvas;\r\n\t}());\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = MyCanvas;\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Container for the canvas.\r\n\t *\r\n\t * @export\r\n\t * @class Container\r\n\t */\r\n\tvar Container = (function () {\r\n\t    function Container() {\r\n\t    }\r\n\t    Object.defineProperty(Container.prototype, \"Width\", {\r\n\t        get: function () {\r\n\t            return this.width;\r\n\t        },\r\n\t        set: function (width) {\r\n\t            if (window.innerWidth >= width) {\r\n\t                this.width = width;\r\n\t            }\r\n\t            else {\r\n\t                this.width = window.innerWidth;\r\n\t            }\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(Container.prototype, \"Height\", {\r\n\t        get: function () {\r\n\t            return this.height;\r\n\t        },\r\n\t        set: function (height) {\r\n\t            if (window.innerHeight >= height) {\r\n\t                this.height = height;\r\n\t            }\r\n\t            else {\r\n\t                this.height = window.innerHeight;\r\n\t            }\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    return Container;\r\n\t}());\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = Container;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Position_1 = __webpack_require__(4);\r\n\tvar PositionUtils = (function () {\r\n\t    function PositionUtils() {\r\n\t    }\r\n\t    /**\r\n\t     * Get the X value based on the Position.\r\n\t     *\r\n\t     * @static\r\n\t     * @param {Position} pos\r\n\t     * @param {Container} container\r\n\t     * @returns\r\n\t     *\r\n\t     * @memberOf PositionUtils\r\n\t     */\r\n\t    PositionUtils.getX = function (pos, container) {\r\n\t        switch (pos) {\r\n\t            case Position_1.Position.TOP_LEFT:\r\n\t            case Position_1.Position.MIDDLE_LEFT:\r\n\t            case Position_1.Position.BOTTOM_LEFT:\r\n\t                return 10;\r\n\t            case Position_1.Position.TOP_CENTER:\r\n\t            case Position_1.Position.MIDDLE_CENTER:\r\n\t            case Position_1.Position.BOTTOM_CENTER:\r\n\t                return container.Width / 2;\r\n\t            case Position_1.Position.TOP_RIGHT:\r\n\t            case Position_1.Position.MIDDLE_RIGHT:\r\n\t            case Position_1.Position.BOTTOM_RIGHT:\r\n\t                return container.Width;\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Get the Y value based on the position.\r\n\t     *\r\n\t     * @static\r\n\t     * @param {Position} pos\r\n\t     * @param {Container} container\r\n\t     * @returns\r\n\t     *\r\n\t     * @memberOf PositionUtils\r\n\t     */\r\n\t    PositionUtils.getY = function (pos, container) {\r\n\t        switch (pos) {\r\n\t            case Position_1.Position.TOP_LEFT:\r\n\t            case Position_1.Position.MIDDLE_LEFT:\r\n\t            case Position_1.Position.BOTTOM_LEFT:\r\n\t                return 50;\r\n\t            case Position_1.Position.TOP_CENTER:\r\n\t            case Position_1.Position.MIDDLE_CENTER:\r\n\t            case Position_1.Position.BOTTOM_CENTER:\r\n\t                return container.Height / 2;\r\n\t            case Position_1.Position.TOP_RIGHT:\r\n\t            case Position_1.Position.MIDDLE_RIGHT:\r\n\t            case Position_1.Position.BOTTOM_RIGHT:\r\n\t                return container.Height;\r\n\t        }\r\n\t    };\r\n\t    return PositionUtils;\r\n\t}());\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = PositionUtils;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * The Position.\r\n\t *\r\n\t * @export\r\n\t * @enum {number}\r\n\t */\r\n\t(function (Position) {\r\n\t    Position[Position[\"TOP_LEFT\"] = 0] = \"TOP_LEFT\";\r\n\t    Position[Position[\"TOP_CENTER\"] = 1] = \"TOP_CENTER\";\r\n\t    Position[Position[\"TOP_RIGHT\"] = 2] = \"TOP_RIGHT\";\r\n\t    Position[Position[\"MIDDLE_LEFT\"] = 3] = \"MIDDLE_LEFT\";\r\n\t    Position[Position[\"MIDDLE_CENTER\"] = 4] = \"MIDDLE_CENTER\";\r\n\t    Position[Position[\"MIDDLE_RIGHT\"] = 5] = \"MIDDLE_RIGHT\";\r\n\t    Position[Position[\"BOTTOM_LEFT\"] = 6] = \"BOTTOM_LEFT\";\r\n\t    Position[Position[\"BOTTOM_CENTER\"] = 7] = \"BOTTOM_CENTER\";\r\n\t    Position[Position[\"BOTTOM_RIGHT\"] = 8] = \"BOTTOM_RIGHT\";\r\n\t})(exports.Position || (exports.Position = {}));\r\n\tvar Position = exports.Position;\r\n\t;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * The Text Element.\r\n\t *\r\n\t * @export\r\n\t * @class TextElement\r\n\t */\r\n\tvar TextElement = (function () {\r\n\t    /**\r\n\t     * Creates an instance of TextElement.\r\n\t     * @param {string} value\r\n\t     * @param {string} font\r\n\t     * @param {string} color\r\n\t     * @param {Position} position\r\n\t     *\r\n\t     * @memberOf TextElement\r\n\t     */\r\n\t    function TextElement(value, font, color, position) {\r\n\t        this.value = value;\r\n\t        this.font = font;\r\n\t        this.color = color;\r\n\t        this.position = position;\r\n\t    }\r\n\t    return TextElement;\r\n\t}());\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = TextElement;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Dialog_1 = __webpack_require__(7);\r\n\tvar UIUtils = (function () {\r\n\t    function UIUtils() {\r\n\t    }\r\n\t    UIUtils.ShowDialog = function (heading) {\r\n\t        var dialog = new Dialog_1.default();\r\n\t        var element = document.createElement('div');\r\n\t        element.innerHTML = dialog.GetHTML(heading);\r\n\t        var positiveButton = element.getElementsByClassName('btn-action-positive').item(0);\r\n\t        positiveButton.addEventListener('click', function (e) {\r\n\t            document.getElementById('dialog-preview').children.item(0).remove();\r\n\t        });\r\n\t        var negetiveButton = element.getElementsByClassName('btn-action-negetive').item(0);\r\n\t        negetiveButton.addEventListener('click', function (e) {\r\n\t            document.getElementById('dialog-preview').children.item(0).remove();\r\n\t        });\r\n\t        document.getElementById('dialog-preview').appendChild(element);\r\n\t    };\r\n\t    return UIUtils;\r\n\t}());\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = UIUtils;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Dialog = (function () {\r\n\t    function Dialog() {\r\n\t    }\r\n\t    /**\r\n\t     * Get HTML\r\n\t     */\r\n\t    Dialog.prototype.GetHTML = function (heading) {\r\n\t        if (heading === void 0) { heading = \"Dialog Heading\"; }\r\n\t        return \"<div class=\\\"ms-Dialog\\\">\\n                    <div class=\\\"ms-Overlay\\\"></div>\\n                    <div class=\\\"ms-Dialog-main\\\">\\n                        <button class=\\\"ms-Dialog-button ms-Dialog-button--close\\\">\\n                        <i class=\\\"ms-Icon ms-Icon--x\\\"></i>\\n                        </button>\\n                        <div class=\\\"ms-Dialog-header\\\">\\n                        <p class=\\\"ms-Dialog-title\\\">\" + heading + \"</p>\\n                        </div>\\n                        <div class=\\\"ms-Dialog-inner\\\">\\n                        <div class=\\\"ms-Dialog-content\\\">\\n                          <form>\\n                          \\n                            <input type=\\\"color\\\" name=\\\"favcolor\\\">\\n                          </form>\\n                        </div>\\n                        <div class=\\\"ms-Dialog-actions\\\">\\n                            <div class=\\\"ms-Dialog-actionsRight\\\">\\n                            <button class=\\\"ms-Dialog-action ms-Button ms-Button--primary btn-action-positive\\\">\\n                                <span class=\\\"ms-Button-label\\\">OK</span>\\n                            </button>\\n                            <button class=\\\"ms-Dialog-action ms-Button btn-action-negetive\\\">\\n                                <span class=\\\"ms-Button-label\\\">Cancel</span>\\n                            </button>\\n                            </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                    </div>\\n                    \";\r\n\t    };\r\n\t    return Dialog;\r\n\t}());\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = Dialog;\r\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** dist/js/app.bundle.js\n **/","import MyCanvas from './MyCanvas';\r\nimport TextElement from './TextElement';\r\nimport { Position } from './Position';\r\nimport ButtonElement from './ButtonElement';\r\nimport UIUtils from './UIUtils';\r\n\r\n// Initialize canvas.\r\nlet surface: HTMLCanvasElement = document.getElementById('drawing_area') as HTMLCanvasElement;\r\nlet canvas = new MyCanvas(surface);\r\ncanvas.Draw('images/header_1.jpg');\r\n\r\n/// Register add header\r\ndocument.getElementById('add-header').addEventListener('click', (e)=>{\r\n    let header = new TextElement('Header', '30pt Arial', '#eee', Position.TOP_LEFT);\r\n    canvas.AddText(header);\r\n});\r\n\r\n// Register add Teaser\r\ndocument.getElementById('add-teaser').addEventListener('click', (e)=>{\r\n\r\n    let teaser = new TextElement(\r\n        'This will be the valuable massage to the audience.',\r\n         '30pt Calibri',\r\n          'white', \r\n          Position.MIDDLE_CENTER);\r\n\r\n    canvas.AddText(teaser);\r\n});\r\n\r\n// Register add Button\r\ndocument.getElementById('add-button').addEventListener('click', (e)=>{\r\n    //let button = new ButtonElement('Visit', '10pt Georgia', '#eee', Position.BOTTOM_RIGHT);\r\n    //canvas.AddText(button);\r\n    UIUtils.ShowDialog('Button');\r\n});\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/bootstrap.ts\n **/","import Container from './Container';\r\nimport TextElement from './TextElement';\r\nimport PositionUtils from './PositionUtils';\r\n\r\ninterface ICanvas {\r\n    ToString(): string;\r\n    Draw(imagePath: string): void;\r\n    AddText(text: TextElement): void;\r\n}\r\n\r\nexport default class MyCanvas implements ICanvas {\r\n    defaultWidth = 100;\r\n    defaultHeight = 200;\r\n\r\n    private container: Container;\r\n    private context: CanvasRenderingContext2D;\r\n    private surface:HTMLCanvasElement;\r\n\r\n    /**\r\n     * Creates an instance of MyCanvas.\r\n     * \r\n     * @param {HTMLCanvasElement} surface\r\n     * \r\n     * @memberOf MyCanvas\r\n     */\r\n    constructor(surface: HTMLCanvasElement) {\r\n        if (surface) {\r\n            this.context = surface.getContext('2d');\r\n        } else {\r\n            surface = document.createElement('Canvas') as HTMLCanvasElement;\r\n            surface.clientWidth = this.defaultWidth;\r\n            surface.clientHeight = this.defaultHeight;\r\n            document.appendChild(surface);\r\n            this.context = surface.getContext('2d');\r\n        }\r\n\r\n        this.surface = surface;\r\n        this.container = new Container();       \r\n    }\r\n\r\n    /**\r\n     * Draw the base image.\r\n     * \r\n     * @param {string} imagePath\r\n     * \r\n     * @memberOf MyCanvas\r\n     */\r\n    public Draw(imagePath: string): void {\r\n        let imageElement = new Image();\r\n        imageElement.onload = () => {\r\n            this.ResizeCanvas(imageElement.width, imageElement.height);\r\n            this.context.drawImage(imageElement, 0, 0);\r\n        };\r\n        imageElement.src = imagePath;\r\n\r\n    }\r\n\r\n    /**\r\n     * Add Text elements to canvas.\r\n     * \r\n     * @param {TextElement} text\r\n     * \r\n     * @memberOf MyCanvas\r\n     */\r\n    public AddText(text: TextElement): void {\r\n        this.WrapText(text);\r\n    }\r\n\r\n    /**\r\n     * Resize the canvas.\r\n     * \r\n     * @private\r\n     * @param {number} width\r\n     * @param {number} height\r\n     * \r\n     * @memberOf MyCanvas\r\n     */\r\n    private ResizeCanvas(width: number, height: number) {\r\n        this.container.Width = width;\r\n        this.container.Height = height;\r\n        this.surface.width = this.container.Width;\r\n        this.surface.height = this.container.Height;\r\n    }\r\n\r\n    /**\r\n     * Wrap the text to canvas width.\r\n     * \r\n     * @private\r\n     * @param {TextElement} text\r\n     * \r\n     * @memberOf MyCanvas\r\n     */\r\n    private WrapText(text: TextElement) {\r\n        let words = text.value.split(' ');\r\n        let line = '';\r\n        let x = PositionUtils.getX(text.position, this.container);\r\n        let y = PositionUtils.getY(text.position, this.container);\r\n        let maxWidth = this.container.Width - 20 - x;\r\n        let lineHeight = 25;\r\n        x = (this.container.Width - maxWidth) / 2;\r\n        \r\n        this.context.font = text.font;\r\n        this.context.fillStyle = text.color;\r\n        //this.context.textBaseline = 'Top';\r\n\r\n        for (let n = 0; n < words.length; n++) {\r\n            let testLine = line + words[n] + ' ';\r\n            let metrics = this.context.measureText(testLine);\r\n            let testWidth = metrics.width;\r\n            if (testWidth > maxWidth && n > 0) {\r\n                this.context.fillText(line, x, y);\r\n                line = words[n] + ' ';\r\n                y += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        this.context.fillText(line, x, y);\r\n    }\r\n\r\n    /**\r\n     * Canvas toString.\r\n     * \r\n     * @returns {string}\r\n     * \r\n     * @memberOf MyCanvas\r\n     */\r\n    public ToString(): string {\r\n        return `The canvas width :${this.container.Width}, The canvas height :${this.container.Height}`;\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/MyCanvas.ts\n **/","\r\n/**\r\n * Container for the canvas.\r\n * \r\n * @export\r\n * @class Container\r\n */\r\nexport default class Container {\r\n    private width: number;\r\n    private height: number;\r\n\r\n    public set Width(width: number) {\r\n        if (window.innerWidth >= width) {\r\n            this.width = width;\r\n        }else{\r\n            this.width = window.innerWidth;\r\n        }\r\n    }\r\n\r\n    public set Height(height: number) {\r\n        if (window.innerHeight >= height) {\r\n            this.height = height;\r\n        }else{\r\n            this.height = window.innerHeight;\r\n        }\r\n    }\r\n\r\n    public get Width(): number {\r\n        return this.width;\r\n    }\r\n\r\n    public get Height(): number {\r\n        return this.height;\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Container.ts\n **/","import { Position } from './Position';\r\nimport Container from './Container';\r\n\r\nexport default class PositionUtils {\r\n\r\n    /**\r\n     * Get the X value based on the Position.\r\n     * \r\n     * @static\r\n     * @param {Position} pos\r\n     * @param {Container} container\r\n     * @returns\r\n     * \r\n     * @memberOf PositionUtils\r\n     */\r\n    public static getX(pos: Position, container: Container) {\r\n        switch (pos) {\r\n            case Position.TOP_LEFT:\r\n            case Position.MIDDLE_LEFT:\r\n            case Position.BOTTOM_LEFT:\r\n                return 10;\r\n            case Position.TOP_CENTER:\r\n            case Position.MIDDLE_CENTER:\r\n            case Position.BOTTOM_CENTER:\r\n                return container.Width / 2;\r\n            case Position.TOP_RIGHT:\r\n            case Position.MIDDLE_RIGHT:\r\n            case Position.BOTTOM_RIGHT:\r\n                return container.Width ;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the Y value based on the position.\r\n     * \r\n     * @static\r\n     * @param {Position} pos\r\n     * @param {Container} container\r\n     * @returns\r\n     * \r\n     * @memberOf PositionUtils\r\n     */\r\n    public static getY(pos: Position, container: Container) {\r\n        switch (pos) {\r\n            case Position.TOP_LEFT:\r\n            case Position.MIDDLE_LEFT:\r\n            case Position.BOTTOM_LEFT:\r\n                return 50;\r\n            case Position.TOP_CENTER:\r\n            case Position.MIDDLE_CENTER:\r\n            case Position.BOTTOM_CENTER:\r\n                return container.Height / 2;\r\n            case Position.TOP_RIGHT:\r\n            case Position.MIDDLE_RIGHT:\r\n            case Position.BOTTOM_RIGHT:\r\n                return container.Height;\r\n        }\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/PositionUtils.ts\n **/","/**\r\n * The Position.\r\n * \r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum Position {\r\n    TOP_LEFT = 0,\r\n    TOP_CENTER = 1,\r\n    TOP_RIGHT = 2,\r\n    MIDDLE_LEFT = 3,\r\n    MIDDLE_CENTER = 4,\r\n    MIDDLE_RIGHT = 5,\r\n    BOTTOM_LEFT = 6,\r\n    BOTTOM_CENTER = 7,\r\n    BOTTOM_RIGHT =8\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/Position.ts\n **/","import {Position} from './Position';\r\n\r\n/**\r\n * The Text Element.\r\n * \r\n * @export\r\n * @class TextElement\r\n */\r\nexport default class TextElement {\r\n\r\n    /**\r\n     * The value of the TextElement.\r\n     * @type {string}\r\n     * @memberOf TextElement\r\n     */\r\n    public value: string;\r\n\r\n    /**\r\n     * The font of the element.\r\n     * @type {string}\r\n     * @memberOf TextElement\r\n     */\r\n    public font: string;\r\n\r\n    /**\r\n     * The color of the element.\r\n     * @type {string}\r\n     * @memberOf TextElement\r\n     */\r\n    public color: string;\r\n\r\n    /**\r\n     * The position of the element.\r\n     * @type {Position}\r\n     * @memberOf TextElement\r\n     */\r\n    public position: Position;\r\n\r\n    /**\r\n     * Creates an instance of TextElement.\r\n     * @param {string} value\r\n     * @param {string} font\r\n     * @param {string} color\r\n     * @param {Position} position\r\n     * \r\n     * @memberOf TextElement\r\n     */\r\n    constructor(value: string, font: string, color: string, position: Position) {\r\n        this.value = value;\r\n        this.font = font;\r\n        this.color = color;\r\n        this.position = position;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/TextElement.ts\n **/","import Dialog from './Dialog';\r\n\r\nexport default /**\r\n * UIUtils\r\n */\r\nclass UIUtils {\r\n    public static ShowDialog(heading:string){\r\n        let dialog = new Dialog();\r\n        let element = document.createElement('div');\r\n        element.innerHTML = dialog.GetHTML(heading);\r\n\r\n        let positiveButton = element.getElementsByClassName('btn-action-positive').item(0);\r\n        positiveButton.addEventListener('click', (e)=>{\r\n            document.getElementById('dialog-preview').children.item(0).remove();\r\n        });\r\n\r\n        let negetiveButton = element.getElementsByClassName('btn-action-negetive').item(0);\r\n        negetiveButton.addEventListener('click', (e)=>{\r\n            document.getElementById('dialog-preview').children.item(0).remove();\r\n        });\r\n\r\n        \r\n\r\n        document.getElementById('dialog-preview').appendChild(element);\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/UIUtils.ts\n **/","export /**\r\n * Dialog\r\n */\r\n default class Dialog {\r\n  \r\n    /**\r\n     * Get HTML\r\n     */\r\n    public GetHTML(heading:string = \"Dialog Heading\") {\r\n        return `<div class=\"ms-Dialog\">\r\n                    <div class=\"ms-Overlay\"></div>\r\n                    <div class=\"ms-Dialog-main\">\r\n                        <button class=\"ms-Dialog-button ms-Dialog-button--close\">\r\n                        <i class=\"ms-Icon ms-Icon--x\"></i>\r\n                        </button>\r\n                        <div class=\"ms-Dialog-header\">\r\n                        <p class=\"ms-Dialog-title\">${heading}</p>\r\n                        </div>\r\n                        <div class=\"ms-Dialog-inner\">\r\n                        <div class=\"ms-Dialog-content\">\r\n                          <form>\r\n                          \r\n                            <input type=\"color\" name=\"favcolor\">\r\n                          </form>\r\n                        </div>\r\n                        <div class=\"ms-Dialog-actions\">\r\n                            <div class=\"ms-Dialog-actionsRight\">\r\n                            <button class=\"ms-Dialog-action ms-Button ms-Button--primary btn-action-positive\">\r\n                                <span class=\"ms-Button-label\">OK</span>\r\n                            </button>\r\n                            <button class=\"ms-Dialog-action ms-Button btn-action-negetive\">\r\n                                <span class=\"ms-Button-label\">Cancel</span>\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    `;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Dialog.ts\n **/"],"sourceRoot":""}